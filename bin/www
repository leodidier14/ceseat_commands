#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
//var debug = require('debug')('ceseat-commands:server');
var http = require('http');
var cors = require('cors')


/**
 * Get port from environment and store in Express.
 */
/**
 * Create HTTP server.
 */

const server = http.createServer(app);
var port = normalizePort(process.env.PORT || '3003');

app.set('port', port);
app.use(cors())
const io = require("socket.io")(server,{
  cors: {
    origin: "http://localhost:8080",
    methods: ["GET", "POST"]
  }});
io.on('connection', (socket) => {
  console.log('Nouvelle connexion', socket.id)
  socket.on('disconnect', ()=> {
    console.log('disconnect', socket.id)
  })
})
 app.set('socket',io)

/**
 * Listen on provided port, on all network interfaces.
 */
 
server.listen(port);


server.on('listening', onListening);
/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}


/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  console.log('Listening on ' + bind);
}
